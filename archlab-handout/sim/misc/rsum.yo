                            | # Sample linked list
0x000:                      |     .pos 0
0x000: 30f40020000000000000 |     irmovq stack,%rsp
0x00a: 804800000000000000   |     call main
0x013: 00                   |     halt
                            | 
0x018:                      |     .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     |     .quad 0x00a
0x020: 2800000000000000     |     .quad ele2
0x028:                      | ele2:
0x028: b000000000000000     |     .quad 0x0b0
0x030: 3800000000000000     |     .quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     |     .quad 0xc00
0x040: 0000000000000000     |     .quad 0
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |     irmovq ele1,%rdi
0x052: 805c00000000000000   |     call rsum_list
0x05b: 90                   |     ret
                            | 
0x05c:                      | rsum_list:
0x05c: 6277                 |     andq %rdi,%rdi
0x05e: 739900000000000000   |     je if
                            | 
0x067:                      | else:
0x067: a03f                 |     pushq %rbx
0x069: 50370000000000000000 |     mrmovq (%rdi),%rbx
0x073: 30f80800000000000000 |     irmovq $8,%r8
0x07d: 6087                 |     addq %r8,%rdi
0x07f: 50870000000000000000 |     mrmovq (%rdi),%r8
0x089: 2087                 |     rrmovq %r8,%rdi
0x08b: 805c00000000000000   |     call rsum_list
0x094: 6030                 |     addq %rbx,%rax
0x096: b03f                 |     popq %rbx
0x098: 90                   |     ret
                            | 
0x099:                      | if:
0x099: 30f00000000000000000 |     irmovq $0,%rax
0x0a3: 90                   |     ret
                            | 
0x2000:                      |     .pos 0x2000
0x2000:                      | stack:
                             | 
